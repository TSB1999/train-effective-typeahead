[{"/Users/tsb99/Documents/App-Dev/REACT/train-effective/src/index.js":"1","/Users/tsb99/Documents/App-Dev/REACT/train-effective/src/App.js":"2","/Users/tsb99/Documents/App-Dev/REACT/train-effective/src/reportWebVitals.js":"3","/Users/tsb99/Documents/App-Dev/REACT/train-effective/src/IndexContext.js":"4","/Users/tsb99/Documents/App-Dev/REACT/train-effective/src/components/Interface.js":"5","/Users/tsb99/Documents/App-Dev/REACT/train-effective/src/stores/IndexStore.js":"6"},{"size":500,"mtime":1611747507357,"results":"7","hashOfConfig":"8"},{"size":375,"mtime":1611748170469,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611326486776,"results":"10","hashOfConfig":"8"},{"size":84,"mtime":1611747453964,"results":"11","hashOfConfig":"8"},{"size":4338,"mtime":1611799649031,"results":"12","hashOfConfig":"8"},{"size":219,"mtime":1611792702490,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a06ei0",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tsb99/Documents/App-Dev/REACT/train-effective/src/index.js",[],"/Users/tsb99/Documents/App-Dev/REACT/train-effective/src/App.js",["27"],"import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nimport { IndexContext } from \"./IndexContext\";\n\nimport Interface from \"./components/Interface\";\n\nfunction App() {\n  const [value, setValue] = useState([0]);\n\n  return (\n    <IndexContext.Provider value = {{value, setValue}}>\n      <Interface />\n    </IndexContext.Provider>\n  );\n}\n\nexport default App;\n","/Users/tsb99/Documents/App-Dev/REACT/train-effective/src/reportWebVitals.js",[],"/Users/tsb99/Documents/App-Dev/REACT/train-effective/src/IndexContext.js",[],"/Users/tsb99/Documents/App-Dev/REACT/train-effective/src/components/Interface.js",["28","29","30","31","32","33","34","35"],"/Users/tsb99/Documents/App-Dev/REACT/train-effective/src/stores/IndexStore.js",[],{"ruleId":"36","severity":1,"message":"37","line":1,"column":17,"nodeType":"38","messageId":"39","endLine":1,"endColumn":26},{"ruleId":"36","severity":1,"message":"40","line":35,"column":11,"nodeType":"38","messageId":"39","endLine":35,"endColumn":16},{"ruleId":"36","severity":1,"message":"41","line":35,"column":18,"nodeType":"38","messageId":"39","endLine":35,"endColumn":26},{"ruleId":"42","severity":1,"message":"43","line":46,"column":6,"nodeType":"44","endLine":46,"endColumn":18,"suggestions":"45"},{"ruleId":"42","severity":1,"message":"46","line":46,"column":7,"nodeType":"47","endLine":46,"endColumn":17},{"ruleId":"48","severity":1,"message":"49","line":74,"column":46,"nodeType":"50","messageId":"51","endLine":74,"endColumn":48},{"ruleId":"48","severity":1,"message":"49","line":74,"column":60,"nodeType":"50","messageId":"51","endLine":74,"endColumn":62},{"ruleId":"52","severity":1,"message":"53","line":123,"column":26,"nodeType":"47","messageId":"54","endLine":123,"endColumn":28},{"ruleId":"55","severity":1,"message":"56","line":137,"column":21,"nodeType":"57","endLine":140,"endColumn":23},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'data'. Either include it or remove the dependency array.","ArrayExpression",["58"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","ArrowFunctionExpression","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"59","fix":"60"},"Update the dependencies array to be: [data]",{"range":"61","text":"62"},[1365,1377],"[data]"]